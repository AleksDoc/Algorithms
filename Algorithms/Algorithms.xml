<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Algorithms</name>
    </assembly>
    <members>
        <member name="T:Algorithms.Common.Node`1">
            <summary>
            Present a node of a linked list.
            </summary>
            <typeparam name="T">Data type.</typeparam>
        </member>
        <member name="M:Algorithms.Common.Node`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:Algorithms.Common.Node`1"/> class.
            </summary>
            <param name="data">Data.</param>
        </member>
        <member name="P:Algorithms.Common.Node`1.Data">
            <summary>
            Gets or sets data.
            </summary>
        </member>
        <member name="P:Algorithms.Common.Node`1.Next">
            <summary>
            Gets or sets the next node.
            </summary>
        </member>
        <member name="T:Algorithms.LinkedList`1">
            <summary>
            Linked list.
            </summary>
            <typeparam name="T">List data type.</typeparam>
        </member>
        <member name="P:Algorithms.LinkedList`1.Count">
            <summary>
            Gets an element count.
            </summary>
        </member>
        <member name="P:Algorithms.LinkedList`1.Head">
            <summary>
            Gets or sets the first element in the list.
            </summary>
        </member>
        <member name="P:Algorithms.LinkedList`1.Tail">
            <summary>
            Gets or sets the last element in the list.
            </summary>
        </member>
        <member name="P:Algorithms.LinkedList`1.IsEmpty">
            <summary>
            Gets a value indicating whether the list is empty.
            </summary>
        </member>
        <member name="M:Algorithms.LinkedList`1.Add(`0)">
            <summary>
            Add a new element to the list.
            </summary>
            <param name="data">Adding data.</param>
        </member>
        <member name="M:Algorithms.LinkedList`1.Remove(`0)">
            <summary>
            Remove data from the list.
            </summary>
            <param name="data">Removing data.</param>
        </member>
        <member name="M:Algorithms.LinkedList`1.Clear">
            <summary>
            Remove all data from the list.
            </summary>
        </member>
        <member name="M:Algorithms.LinkedList`1.System#Collections#IEnumerable#GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="M:Algorithms.LinkedList`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator">
            <inheritdoc/>
        </member>
        <member name="T:Algorithms.Program">
            <summary>
            Contents the entry method.
            </summary>
        </member>
        <member name="M:Algorithms.Program.Main">
            <summary>
            The entry point of an application.
            </summary>
        </member>
    </members>
</doc>
